<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.1.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
	http://www.springframework.org/schema/websocket
    http://www.springframework.org/schema/websocket/spring-websocket-4.1.xsd">
	
	<mvc:resources mapping="/resource/**" location="/resource/"/>
	<mvc:resources mapping="/resource-modality/**" location="/resource-modality/"/>
	<mvc:resources mapping="/resource-now/**" location="/resource-now/"/>
	<mvc:resources mapping="/resource-modality/**" location="/resource-modality/"/>
	
	<mvc:resources mapping="/upload/fckeditor/**" location="/upload/fckeditor/"/>
	<mvc:resources mapping="/upload/jyyw/**" location="/upload/jyyw/"/>
	<mvc:resources mapping="/upload/fxpg/**" location="/upload/fxpg/"/>
	<mvc:resources mapping="/upload/xstb/**" location="/upload/xstb/"/>
	<mvc:resources mapping="/upload/jcxx/**" location="/upload/jcxx/"/>
	<mvc:resources mapping="/upload/grww/**" location="/upload/grww/"/>
	<mvc:resources mapping="/upload/reception/**" location="/upload/reception/"/>
	<mvc:resources mapping="/upload/inspect/**" location="/upload/inspect/"/>
	<mvc:resources mapping="/upload/letterReception/**" location="/upload/letterReception/"/>
	
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
		<property name="interceptors">
			<list>
				<ref bean="adminContextInterceptor"/>
			</list>
		</property>
	</bean>  
	<bean  class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">  
		<property name="webBindingInitializer">
			<bean class="com.braker.common.web.BindingInitializer"/>
		</property>
	    <property name="messageConverters">  
	        <list>  
	        	<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">  
				    <property name="supportedMediaTypes">  
				        <list>  
				            <value>text/html;charset=UTF-8</value>  
				        </list>  
				    </property>  
				</bean>  
	            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
						 	<value>text/plain;charset=UTF-8</value>
						</list>
					</property>
				</bean>
	        </list>  
	    </property>  
	</bean>
	
	<bean id="adminContextInterceptor" class="com.braker.common.web.AdminContextInterceptor">
		<property name="loginUrl" value="/login.do"/>
		<property name="excludeUrls">
			<list>
				<value>/login.do</value>
				<value>/logout.do</value>
				<value>/timeout.do</value>
				<value>/singleSignOn</value>
			</list>
		</property>
	</bean>
	<!-- websocket处理类 -->
    <bean id="myHandler" class="com.braker.common.webSocket.MyWebSocketHandler"/>
    <!-- 握手接口/拦截器 -->
    <bean id="myInterceptor" class="com.braker.common.webSocket.HandshakeInterceptor"/>
	<websocket:handlers >
        <websocket:mapping path="/socket" handler="myHandler"/>
        <websocket:handshake-interceptors>
            <ref bean="myInterceptor"/>
        </websocket:handshake-interceptors>
    </websocket:handlers>

    <!--  注册 sockJS -->
    <websocket:handlers>
        <websocket:mapping path="/socket" handler="myHandler"/>
        <websocket:handshake-interceptors>
            <ref bean="myInterceptor"/>
        </websocket:handshake-interceptors>
        <websocket:sockjs />
    </websocket:handlers>
	
	<!-- 定义视图解析器 -->	
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
	<!-- 异常解析器 -->
	<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		 <property name="exceptionMappings">     
             <props>     
                 <prop key="java.lang.Exception">500</prop>     
                 <prop key="java.lang.Throwable">500</prop>     
             </props>     
         </property>     
         <property name="statusCodes">     
             <props>     
                 <prop key="errors/error">500</prop>     
             </props>     
         </property>     
         <!-- 设置日志输出级别，不定义则默认不输出警告等错误日志信息 -->     
         <property name="warnLogCategory" value="WARN"></property>     
         <!-- 默认错误页面，当找不到上面mappings中指定的异常对应视图时，使用本默认配置 -->     
         <property name="defaultErrorView" value="500"></property>     
         <!-- 默认HTTP状态码 -->     
         <property name="defaultStatusCode" value="500"></property>     
	</bean>
	
	<!-- 需要组件的包位置 -->
	<context:component-scan base-package="com.braker"/>
	<context:component-scan base-package="com.brakerdemo"/>
	
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />
	<!-- SpringMVC上传文件时，需要配置MultipartResolver处理器 -->  
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
        <property name="defaultEncoding" value="UTF-8"/>  
        <!-- 指定所上传文件的总大小不能超过300MB。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->  
        <property name="maxUploadSize" value="307200000"/> 
        <!--resolveLazily属性启用是为了推迟文件解析，以便在UploadAction 中捕获文件大小异常-->  
        <property name="resolveLazily" value="true"/>
    </bean>  
    <!-- 获取spring IOC容器内注入对象的工具类 -->
    <bean id="springContextUtil" class="com.braker.common.util.SpringContextUtil"></bean>
</beans>
